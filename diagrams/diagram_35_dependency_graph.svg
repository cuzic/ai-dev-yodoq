<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1820 1650">
  <defs>
    <style>
      .title { font-family: 'Noto Sans JP', sans-serif; font-size: 74px; font-weight: bold; fill: #333333; }
      .layer-header { font-family: 'Noto Sans JP', sans-serif; font-size: 50px; fill: #00146E; font-weight: bold; }
      .task-title { font-family: 'Noto Sans JP', sans-serif; font-size: 44px; font-weight: bold; fill: white; }
      .task-text { font-family: 'Noto Sans JP', sans-serif; font-size: 35px; fill: white; }
      .benefit-title { font-family: 'Noto Sans JP', sans-serif; font-size: 46px; fill: white; font-weight: bold; }
      .benefit-text { font-family: 'Noto Sans JP', sans-serif; font-size: 37px; fill: white; }
      .legend-text { font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: #333333; }
    </style>
  </defs>

  <!-- Background -->
  <rect width="1820" height="1650" fill="#FFFFFF"/>

  <!-- Title -->
  <text x="700" y="74" class="title" text-anchor="middle">タスク依存関係グラフ（実装順序の可視化）</text>

  <!-- Layer 1: Independent tasks -->
  <text x="50" y="167" class="layer-header">
    Layer 1: 独立タスク（並行実行可）
  </text>

  <!-- T-01 -->
  <rect x="100" y="207" width="225" height="145" fill="#00AFF0" rx="8"/>
  <text x="213" y="255" class="task-title" text-anchor="middle">T-01: DB設計</text>
  <text x="117" y="295" class="task-text">tasksテーブル作成</text>
  <text x="117" y="335" class="task-text">工数: 30分</text>

  <!-- T-09 -->
  <rect x="370" y="207" width="225" height="145" fill="#00AFF0" rx="8"/>
  <text x="483" y="255" class="task-title" text-anchor="middle">T-09: 環境設定</text>
  <text x="387" y="295" class="task-text">.env.example作成</text>
  <text x="387" y="335" class="task-text">工数: 15分</text>

  <!-- T-10 -->
  <rect x="640" y="207" width="225" height="145" fill="#00AFF0" rx="8"/>
  <text x="753" y="255" class="task-title" text-anchor="middle">T-10: README作成</text>
  <text x="657" y="295" class="task-text">セットアップ手順</text>
  <text x="657" y="335" class="task-text">工数: 20分</text>

  <!-- Layer 2: Depends on Layer 1 -->
  <text x="50" y="447" class="layer-header">
    Layer 2: Layer 1完了後
  </text>

  <!-- T-02 -->
  <rect x="100" y="487" width="225" height="145" fill="#00146E" rx="8"/>
  <text x="213" y="535" class="task-title" text-anchor="middle">T-02: Entity作成</text>
  <text x="117" y="575" class="task-text">Task.java</text>
  <text x="117" y="615" class="task-text">工数: 30分 | 依存: T-01</text>

  <!-- Arrow T-01 to T-02 -->
  <line x1="213" y1="352" x2="213" y2="487" stroke="#00AFF0" stroke-width="4"/>
  <polygon points="213,487 208,477 218,477" fill="#00AFF0"/>

  <!-- Layer 3: Backend APIs -->
  <text x="50" y="727" class="layer-header">
    Layer 3: Backend API実装
  </text>

  <!-- T-03 -->
  <rect x="100" y="767" width="225" height="145" fill="#003399" rx="8"/>
  <text x="213" y="815" class="task-title" text-anchor="middle">T-03: GET API</text>
  <text x="117" y="855" class="task-text">一覧取得</text>
  <text x="117" y="895" class="task-text">工数: 60分 | 依存: T-02</text>

  <!-- Arrow T-02 to T-03 -->
  <line x1="213" y1="632" x2="213" y2="767" stroke="#00146E" stroke-width="4"/>
  <polygon points="213,767 208,757 218,757" fill="#00146E"/>

  <!-- T-04 -->
  <rect x="370" y="767" width="225" height="145" fill="#003399" rx="8"/>
  <text x="483" y="815" class="task-title" text-anchor="middle">T-04: POST API</text>
  <text x="387" y="855" class="task-text">新規作成</text>
  <text x="387" y="895" class="task-text">工数: 60分 | 依存: T-03</text>

  <!-- Arrow T-03 to T-04 -->
  <line x1="325" y1="840" x2="370" y2="840" stroke="#003399" stroke-width="4"/>
  <polygon points="370,840 360,835 360,845" fill="#003399"/>

  <!-- T-05 -->
  <rect x="640" y="767" width="225" height="145" fill="#003399" rx="8"/>
  <text x="753" y="815" class="task-title" text-anchor="middle">T-05: PATCH API</text>
  <text x="657" y="855" class="task-text">ステータス更新</text>
  <text x="657" y="895" class="task-text">工数: 60分 | 依存: T-04</text>

  <!-- Arrow T-04 to T-05 -->
  <line x1="595" y1="840" x2="640" y2="840" stroke="#003399" stroke-width="4"/>
  <polygon points="640,840 630,835 630,845" fill="#003399"/>

  <!-- T-06 -->
  <rect x="910" y="767" width="225" height="145" fill="#003399" rx="8"/>
  <text x="1023" y="815" class="task-title" text-anchor="middle">T-06: DELETE API</text>
  <text x="927" y="855" class="task-text">論理削除</text>
  <text x="927" y="895" class="task-text">工数: 45分 | 依存: T-05</text>

  <!-- Arrow T-05 to T-06 -->
  <line x1="865" y1="840" x2="910" y2="840" stroke="#003399" stroke-width="4"/>
  <polygon points="910,840 900,835 900,845" fill="#003399"/>

  <!-- Layer 4: Frontend -->
  <text x="50" y="1007" class="layer-header">
    Layer 4: Frontend実装（Backend完了後）
  </text>

  <!-- T-07 -->
  <rect x="100" y="1047" width="225" height="145" fill="#66D9FF" rx="8"/>
  <text x="213" y="1095" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; font-weight: bold; fill: #00146E; text-anchor: middle;">
    T-07: 一覧画面
  </text>
  <text x="117" y="1135" style="font-family: 'Noto Sans JP', sans-serif; font-size: 35px; fill: #00146E;">
    React実装
  </text>
  <text x="117" y="1175" style="font-family: 'Noto Sans JP', sans-serif; font-size: 35px; fill: #00146E;">
    工数: 60分 | 依存: T-03
  </text>

  <!-- Arrow T-03 to T-07 -->
  <line x1="213" y1="912" x2="213" y2="1047" stroke="#003399" stroke-width="4"/>
  <polygon points="213,1047 208,1037 218,1037" fill="#003399"/>

  <!-- T-08 -->
  <rect x="370" y="1047" width="225" height="145" fill="#66D9FF" rx="8"/>
  <text x="483" y="1095" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; font-weight: bold; fill: #00146E; text-anchor: middle;">
    T-08: 作成フォーム
  </text>
  <text x="387" y="1135" style="font-family: 'Noto Sans JP', sans-serif; font-size: 35px; fill: #00146E;">
    バリデーション
  </text>
  <text x="387" y="1175" style="font-family: 'Noto Sans JP', sans-serif; font-size: 35px; fill: #00146E;">
    工数: 60分 | 依存: T-04, T-07
  </text>

  <!-- Arrow T-04 to T-08 -->
  <line x1="483" y1="912" x2="483" y2="1047" stroke="#003399" stroke-width="4"/>
  <polygon points="483,1047 478,1037 488,1037" fill="#003399"/>

  <!-- Arrow T-07 to T-08 -->
  <line x1="325" y1="1120" x2="370" y2="1120" stroke="#66D9FF" stroke-width="4" stroke-dasharray="5,3"/>
  <polygon points="370,1120 360,1115 360,1125" fill="#66D9FF"/>

  <!-- Benefits section -->
  <rect x="1155" y="207" width="615" height="985" fill="#E6E6E6" stroke="#00146E" stroke-width="3" rx="10"/>
  <text x="1463" y="268" style="font-family: 'Noto Sans JP', sans-serif; font-size: 56px; fill: #00146E; text-anchor: middle; font-weight: bold;">
    依存関係グラフの活用
  </text>

  <!-- Benefit 1 -->
  <rect x="1185" y="308" width="555" height="203" fill="#00AFF0" rx="8"/>
  <text x="1463" y="365" class="benefit-title" text-anchor="middle;">
    1. クリティカルパスの特定
  </text>
  <text x="1203" y="416" class="benefit-text">
    最長経路（T-01 → T-02 → T-03 → T-04 → T-05
  </text>
  <text x="1203" y="458" class="benefit-text">
    → T-06）が完了時間を決定 = 合計285分
  </text>
  <text x="1203" y="500" class="benefit-text">
    → この経路を優先的に進める
  </text>

  <!-- Benefit 2 -->
  <rect x="1185" y="536" width="555" height="188" fill="#003399" rx="8"/>
  <text x="1463" y="593" class="benefit-title" text-anchor="middle;">
    2. 並行作業の可能性
  </text>
  <text x="1203" y="644" class="benefit-text">
    Layer 1（T-01, T-09, T-10）は並行実行可能
  </text>
  <text x="1203" y="686" class="benefit-text">
    → 複数人で分担可能、全体完了時間を短縮
  </text>

  <!-- Benefit 3 -->
  <rect x="1185" y="749" width="555" height="188" fill="#00146E" rx="8"/>
  <text x="1463" y="806" class="benefit-title" text-anchor="middle;">
    3. 手戻り防止
  </text>
  <text x="1203" y="857" class="benefit-text">
    依存先タスクが完了していないと、
  </text>
  <text x="1203" y="899" class="benefit-text">
    依存元タスクで手戻りが発生。グラフで順序を可視化
  </text>

  <!-- Benefit 4 -->
  <rect x="1185" y="962" width="555" height="178" fill="#66D9FF" rx="8"/>
  <text x="1463" y="1019" class="benefit-title" text-anchor="middle;">
    4. AIへの指示が明確に
  </text>
  <text x="1203" y="1070" class="benefit-text">
    「T-04を実装して（T-03完了済み）」
  </text>
  <text x="1203" y="1112" class="benefit-text">
    → AIが前提条件を理解、スムーズに実装
  </text>

  <!-- Bottom: Legend -->
  <rect x="50" y="1250" width="1720" height="380" fill="#E6E6E6" stroke="#00146E" stroke-width="3" rx="10"/>
  <text x="910" y="1318" style="font-family: 'Noto Sans JP', sans-serif; font-size: 56px; fill: #00146E; text-anchor: middle; font-weight: bold;">
    凡例と読み方
  </text>

  <rect x="80" y="1365" width="37" height="27" fill="#00AFF0" rx="3"/>
  <text x="130" y="1398" class="legend-text">
    Layer 1: 独立タスク（並行実行可）
  </text>

  <rect x="620" y="1365" width="37" height="27" fill="#00146E" rx="3"/>
  <text x="670" y="1398" class="legend-text">
    Layer 2: Entity/Repository作成
  </text>

  <rect x="80" y="1448" width="37" height="27" fill="#003399" rx="3"/>
  <text x="130" y="1481" class="legend-text">
    Layer 3: Backend API（順次実行）
  </text>

  <rect x="620" y="1448" width="37" height="27" fill="#66D9FF" rx="3"/>
  <text x="670" y="1481" class="legend-text">
    Layer 4: Frontend実装
  </text>

  <line x1="1230" y1="1379" x2="1280" y2="1379" stroke="#00146E" stroke-width="4"/>
  <polygon points="1280,1379 1270,1374 1270,1384" fill="#00146E"/>
  <text x="1300" y="1398" class="legend-text">
    直接依存（前提タスク完了必須）
  </text>

  <line x1="1230" y1="1462" x2="1280" y2="1462" stroke="#66D9FF" stroke-width="4" stroke-dasharray="5,3"/>
  <polygon points="1280,1462 1270,1457 1270,1467" fill="#66D9FF"/>
  <text x="1300" y="1481" class="legend-text">
    間接依存（完了推奨だが必須ではない）
  </text>
</svg>
