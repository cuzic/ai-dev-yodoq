<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2000 2100">
  <defs>
    <style>
      .title { font-family: 'Noto Sans JP', sans-serif; font-size: 70px; font-weight: bold; fill: #333333; }
      .phase-title { font-family: 'Noto Sans JP', sans-serif; font-size: 60px; font-weight: bold; fill: white; }
      .code-text { font-family: 'Courier New', monospace; font-size: 42px; fill: white; }
    </style>
  </defs>

  <!-- Background -->
  <rect width="2000" height="2100" fill="#FFFFFF"/>

  <!-- Title -->
  <text x="1000" y="80" class="title" text-anchor="middle">Given-When-Then 構造</text>
  <text x="1000" y="180" class="title" text-anchor="middle" font-size="60">(BDD形式テストの書き方)</text>

  <!-- Structure explanation -->
  <rect x="100" y="220" width="1800" height="80" fill="#E6E6E6" stroke="#00146E" stroke-width="3" rx="10"/>
  <text x="1000" y="270" style="font-family: 'Noto Sans JP', sans-serif; font-size: 60px; fill: #00146E; text-anchor: middle; font-weight: bold;">
    Given（前提条件）→ When（実行）→ Then（検証）
  </text>

  <!-- Given Phase -->
  <rect x="100" y="340" width="540" height="600" fill="#00AFF0" rx="10"/>
  <text x="370" y="400" class="phase-title" text-anchor="middle">1. Given（前提条件）</text>

  <text x="130" y="480" style="font-family: 'Noto Sans JP', sans-serif; font-size: 48px; fill: white; font-weight: bold;">
    何をセットアップするか:
  </text>
  <text x="150" y="550" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • テストデータ準備
  </text>
  <text x="150" y="615" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • モックオブジェクト設定
  </text>
  <text x="150" y="680" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • 依存サービスの振る舞い定義
  </text>
  <text x="150" y="745" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • データベース初期状態
  </text>

  <text x="130" y="820" style="font-family: 'Noto Sans JP', sans-serif; font-size: 48px; fill: white; font-weight: bold;">
    コード例:
  </text>
  <rect x="130" y="845" width="490" height="120" fill="#003399" rx="5"/>
  <text x="145" y="885" class="code-text">// Given: ユーザーが存在する</text>
  <text x="145" y="945" class="code-text">User user = new User(</text>

  <!-- Arrow 1 to 2 -->
  <line x1="640" y1="640" x2="700" y2="640" stroke="#00AFF0" stroke-width="6"/>
  <polygon points="700,640 690,635 690,645" fill="#00AFF0"/>

  <!-- When Phase -->
  <rect x="720" y="340" width="540" height="600" fill="#00146E" rx="10"/>
  <text x="990" y="400" class="phase-title" text-anchor="middle">2. When（実行）</text>

  <text x="750" y="480" style="font-family: 'Noto Sans JP', sans-serif; font-size: 48px; fill: white; font-weight: bold;">
    何を実行するか:
  </text>
  <text x="770" y="550" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • テストしたいメソッド呼び出し
  </text>
  <text x="770" y="615" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • APIエンドポイントリクエスト
  </text>
  <text x="770" y="680" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • ユーザーアクションの
  </text>
  <text x="790" y="730" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    シミュレート
  </text>
  <text x="770" y="795" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • 1つのアクションのみ（複数禁止）
  </text>

  <text x="750" y="870" style="font-family: 'Noto Sans JP', sans-serif; font-size: 48px; fill: white; font-weight: bold;">
    コード例:
  </text>
  <rect x="750" y="895" width="490" height="80" fill="#003399" rx="5"/>
  <text x="765" y="935" class="code-text">// When: ログイン試行</text>

  <!-- Arrow 2 to 3 -->
  <line x1="1260" y1="640" x2="1320" y2="640" stroke="#00146E" stroke-width="6"/>
  <polygon points="1320,640 1310,635 1310,645" fill="#00146E"/>

  <!-- Then Phase -->
  <rect x="1340" y="340" width="540" height="600" fill="#003399" rx="10"/>
  <text x="1610" y="400" class="phase-title" text-anchor="middle">3. Then（検証）</text>

  <text x="1370" y="480" style="font-family: 'Noto Sans JP', sans-serif; font-size: 48px; fill: white; font-weight: bold;">
    何を検証するか:
  </text>
  <text x="1390" y="550" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • 戻り値の検証
  </text>
  <text x="1390" y="615" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • 状態変化の確認
  </text>
  <text x="1390" y="680" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • 依存サービス呼び出し検証
  </text>
  <text x="1390" y="745" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white;">
    • 例外発生の確認
  </text>

  <text x="1370" y="820" style="font-family: 'Noto Sans JP', sans-serif; font-size: 48px; fill: white; font-weight: bold;">
    コード例:
  </text>
  <rect x="1370" y="845" width="490" height="120" fill="#66D9FF" rx="5"/>
  <text x="1385" y="885" style="font-family: 'Courier New', monospace; font-size: 42px; fill: #00146E;">// Then: JWTトークンが</text>
  <text x="1385" y="945" style="font-family: 'Courier New', monospace; font-size: 42px; fill: #00146E;">//       返される</text>

  <!-- Real example -->
  <rect x="100" y="1000" width="1800" height="1040" fill="#E6E6E6" stroke="#00146E" stroke-width="3" rx="10"/>
  <text x="1000" y="1080" style="font-family: 'Noto Sans JP', sans-serif; font-size: 70px; fill: #00146E; text-anchor: middle; font-weight: bold;">
    実践例：ログイン機能のテスト
  </text>

  <!-- Bad example -->
  <rect x="150" y="1150" width="800" height="850" fill="#CC0000" opacity="0.1" stroke="#CC0000" stroke-width="4" rx="10"/>
  <text x="550" y="1210" style="font-family: 'Noto Sans JP', sans-serif; font-size: 60px; fill: #CC0000; text-anchor: middle; font-weight: bold;">
    ✗ 悪い例（構造不明確）
  </text>

  <rect x="180" y="1255" width="740" height="440" fill="#CC0000" rx="8"/>
  <text x="200" y="1305" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">@Test</text>
  <text x="200" y="1365" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">void testLogin() {</text>
  <text x="220" y="1425" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">User user = new User(</text>
  <text x="230" y="1485" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">"test@example.com");</text>
  <text x="220" y="1545" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">userRepository.save(user);</text>
  <text x="220" y="1605" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">LoginResponse response =</text>
  <text x="230" y="1665" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">authService.login(...);</text>
  <text x="200" y="1725" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">}</text>

  <text x="200" y="1810" style="font-family: 'Noto Sans JP', sans-serif; font-size: 50px; fill: #CC0000; font-weight: bold;">
    問題点:
  </text>
  <text x="220" y="1885" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: #CC0000;">
    • Given/When/Then が不明瞭
  </text>
  <text x="220" y="1950" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: #CC0000;">
    • テストの意図が読み取りにくい
  </text>

  <!-- Good example -->
  <rect x="1050" y="1150" width="800" height="850" fill="#00AA00" opacity="0.1" stroke="#00AA00" stroke-width="4" rx="10"/>
  <text x="1450" y="1210" style="font-family: 'Noto Sans JP', sans-serif; font-size: 60px; fill: #00AA00; text-anchor="middle; font-weight: bold;">
    ✓ 良い例（明確な構造）
  </text>

  <rect x="1080" y="1255" width="740" height="560" fill="#00AA00" rx="8"/>
  <text x="1100" y="1305" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">@Test</text>
  <text x="1100" y="1365" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">void ユーザー登録済み_</text>
  <text x="1110" y="1425" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">ログイン成功() {</text>
  <text x="1120" y="1485" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">// Given: ユーザー登録済み</text>
  <text x="1120" y="1545" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">User user = new User(</text>
  <text x="1130" y="1605" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">"test@example.com");</text>
  <text x="1120" y="1675" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">// When: ログイン試行</text>
  <text x="1120" y="1735" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">LoginResponse response =</text>
  <text x="1130" y="1795" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">authService.login(...);</text>
  <text x="1120" y="1865" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">// Then: トークン発行</text>
  <text x="1120" y="1925" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">assertNotNull(response);</text>
  <text x="1100" y="1985" style="font-family: 'Courier New', monospace; font-size: 42px; fill: white;">}</text>

  <text x="1100" y="2060" style="font-family: 'Noto Sans JP', sans-serif; font-size: 44px; fill: white; font-weight: bold;">
    メリット: ✓ 日本語メソッド名、コメント明示
  </text>
</svg>
