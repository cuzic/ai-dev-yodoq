<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 600">
  <defs>
    <style>
      .title { font-family: 'Noto Sans JP', sans-serif; font-size: 24px; font-weight: bold; fill: #00146E; text-anchor: middle; }
      .pattern-title { font-family: 'Noto Sans JP', sans-serif; font-size: 16px; font-weight: bold; fill: white; text-anchor: middle; }
      .item { font-family: 'Noto Sans JP', sans-serif; font-size: 12px; fill: #333; }
      .example { font-family: 'Noto Sans JP', sans-serif; font-size: 11px; fill: #666; font-style: italic; }
      .p1 { fill: #3498DB; }
      .p2 { fill: #27AE60; }
      .p3 { fill: #E67E22; }
      .p4 { fill: #9B59B6; }
    </style>
  </defs>

  <rect width="800" height="600" fill="#FFFFFF"/>
  <text x="400" y="30" class="title">効果的なプロンプトパターン</text>

  <!-- Pattern 1 -->
  <g transform="translate(40, 60)">
    <rect x="0" y="0" width="340" height="40" rx="5" class="p1"/>
    <text x="170" y="26" class="pattern-title">1. 5W1Hを明確に</text>

    <rect x="0" y="50" width="340" height="190" rx="5" fill="#EBF5FB" stroke="#3498DB" stroke-width="2"/>
    <g transform="translate(15, 70)">
      <text x="0" y="0" class="item" font-weight="bold">悪い例：</text>
      <text x="10" y="18" class="example">「ログイン機能を作って」</text>

      <text x="0" y="46" class="item" font-weight="bold">良い例：</text>
      <text x="10" y="64" class="example">「Reactで（What）</text>
      <text x="10" y="80" class="example">メールアドレスとパスワードで（How）</text>
      <text x="10" y="96" class="example">JWTトークンを発行する（What）</text>
      <text x="10" y="112" class="example">ログイン機能を（What）</text>
      <text x="10" y="128" class="example">auth.tsファイルに（Where）</text>
      <text x="10" y="144" class="example">作って」</text>
    </g>
  </g>

  <!-- Pattern 2 -->
  <g transform="translate(420, 60)">
    <rect x="0" y="0" width="340" height="40" rx="5" class="p2"/>
    <text x="170" y="26" class="pattern-title">2. 制約条件を示す</text>

    <rect x="0" y="50" width="340" height="190" rx="5" fill="#E8F8F5" stroke="#27AE60" stroke-width="2"/>
    <g transform="translate(15, 70)">
      <text x="0" y="0" class="item" font-weight="bold">悪い例：</text>
      <text x="10" y="18" class="example">「ユーザー一覧を表示」</text>

      <text x="0" y="46" class="item" font-weight="bold">良い例：</text>
      <text x="10" y="64" class="example">「ユーザー一覧を表示。</text>
      <text x="10" y="80" class="example">制約：</text>
      <text x="10" y="96" class="example">• ページネーション必須</text>
      <text x="10" y="112" class="example">• 1ページ20件</text>
      <text x="10" y="128" class="example">• 検索フィルター付き</text>
      <text x="10" y="144" class="example">• モバイル対応」</text>
    </g>
  </g>

  <!-- Pattern 3 -->
  <g transform="translate(40, 300)">
    <rect x="0" y="0" width="340" height="40" rx="5" class="p3"/>
    <text x="170" y="26" class="pattern-title">3. 期待する出力を示す</text>

    <rect x="0" y="50" width="340" height="210" rx="5" fill="#FEF5E7" stroke="#E67E22" stroke-width="2"/>
    <g transform="translate(15, 70)">
      <text x="0" y="0" class="item" font-weight="bold">悪い例：</text>
      <text x="10" y="18" class="example">「テストを書いて」</text>

      <text x="0" y="46" class="item" font-weight="bold">良い例：</text>
      <text x="10" y="64" class="example">「login()関数のテストを書いて。</text>
      <text x="10" y="80" class="example">期待する形式：</text>
      <text x="10" y="96" class="example">• Jestを使用</text>
      <text x="10" y="112" class="example">• 正常系2パターン</text>
      <text x="10" y="128" class="example">• 異常系3パターン</text>
      <text x="10" y="144" class="example">• Given-When-Then形式</text>
      <text x="10" y="160" class="example">• モック使用」</text>
    </g>
  </g>

  <!-- Pattern 4 -->
  <g transform="translate(420, 300)">
    <rect x="0" y="0" width="340" height="40" rx="5" class="p4"/>
    <text x="170" y="26" class="pattern-title">4. コンテキストを提供</text>

    <rect x="0" y="50" width="340" height="210" rx="5" fill="#F4ECF7" stroke="#9B59B6" stroke-width="2"/>
    <g transform="translate(15, 70)">
      <text x="0" y="0" class="item" font-weight="bold">悪い例：</text>
      <text x="10" y="18" class="example">「バグを修正して」</text>

      <text x="0" y="46" class="item" font-weight="bold">良い例：</text>
      <text x="10" y="64" class="example">「エラーが発生しています。</text>
      <text x="10" y="80" class="example">状況：</text>
      <text x="10" y="96" class="example">• ログインボタンクリック時</text>
      <text x="10" y="112" class="example">• 'undefined' エラー</text>
      <text x="10" y="128" class="example">• Chrome devtoolsで確認</text>
      <text x="10" y="144" class="example">• auth.ts:42行目</text>
      <text x="10" y="160" class="example">原因を特定して修正して」</text>
    </g>
  </g>

  <!-- Bottom tip -->
  <rect x="40" y="550" width="720" height="35" rx="5" fill="#FFF8E1" stroke="#F39C12" stroke-width="2"/>
  <text x="400" y="575" style="font-family: 'Noto Sans JP', sans-serif; font-size: 14px; fill: #F39C12; text-anchor: middle; font-weight: bold;">
    詳しく具体的に伝えるほど、AIの回答精度が上がる
  </text>
</svg>
