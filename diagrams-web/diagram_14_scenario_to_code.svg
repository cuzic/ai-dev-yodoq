<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 800 600">
  <defs>
    <style>
      .title { font-family: 'Noto Sans JP', sans-serif; font-size: 24px; font-weight: bold; fill: #00146E; text-anchor: middle; }
      .actor { font-family: 'Noto Sans JP', sans-serif; font-size: 14px; fill: #333; font-weight: bold; text-anchor: middle; }
      .step-text { font-family: 'Noto Sans JP', sans-serif; font-size: 13px; fill: #333; }
      .code-text { font-family: 'Courier New', monospace; font-size: 11px; fill: #00146E; }
      .label { font-family: 'Noto Sans JP', sans-serif; font-size: 12px; fill: #666; font-weight: bold; }
    </style>
  </defs>

  <!-- Background -->
  <rect width="800" height="600" fill="#FFFFFF"/>

  <!-- Title -->
  <text x="400" y="30" class="title">シナリオ→コード変換（Given-When-Then）</text>

  <!-- User actor -->
  <rect x="80" y="70" width="120" height="40" rx="20" fill="#3498DB"/>
  <text x="140" y="95" class="actor" fill="white">ユーザー</text>
  <line x1="140" y1="110" x2="140" y2="540" stroke="#3498DB" stroke-width="2" stroke-dasharray="5,5"/>

  <!-- System actor -->
  <rect x="380" y="70" width="120" height="40" rx="20" fill="#27AE60"/>
  <text x="440" y="95" class="actor" fill="white">システム</text>
  <line x1="440" y1="110" x2="440" y2="540" stroke="#27AE60" stroke-width="2" stroke-dasharray="5,5"/>

  <!-- Test actor -->
  <rect x="620" y="70" width="120" height="40" rx="20" fill="#E67E22"/>
  <text x="680" y="95" class="actor" fill="white">テストコード</text>
  <line x1="680" y1="110" x2="680" y2="540" stroke="#E67E22" stroke-width="2" stroke-dasharray="5,5"/>

  <!-- Scenario section -->
  <rect x="30" y="135" width="340" height="170" rx="5" fill="#F5F5F5" stroke="#00146E" stroke-width="2"/>
  <text x="200" y="160" style="font-family: 'Noto Sans JP', sans-serif; font-size: 16px; font-weight: bold; fill: #00146E; text-anchor: middle;">
    シナリオ（日本語）
  </text>

  <text x="50" y="190" class="step-text" font-weight="bold">Given:</text>
  <text x="110" y="190" class="step-text">ユーザーがログイン済み</text>

  <text x="50" y="220" class="step-text" font-weight="bold">When:</text>
  <text x="110" y="220" class="step-text">プロフィール編集画面で</text>
  <text x="110" y="240" class="step-text">名前を「太郎」→「次郎」に変更</text>
  <text x="110" y="260" class="step-text">保存ボタンをクリック</text>

  <text x="50" y="290" class="step-text" font-weight="bold">Then:</text>
  <text x="110" y="290" class="step-text">「保存しました」と表示される</text>

  <!-- Code section -->
  <rect x="430" y="135" width="340" height="395" rx="5" fill="#F8F8F8" stroke="#E67E22" stroke-width="2"/>
  <text x="600" y="160" style="font-family: 'Noto Sans JP', sans-serif; font-size: 16px; font-weight: bold; fill: #E67E22; text-anchor: middle;">
    テストコード（自動生成）
  </text>

  <g transform="translate(445, 180)">
    <text x="0" y="0" class="code-text">describe('プロフィール更新', () => {</text>
    <text x="10" y="18" class="code-text">test('名前変更が成功する', async () => {</text>
    <text x="20" y="36" class="code-text" fill="#666">// Given</text>
    <text x="20" y="52" class="code-text">await login('user@example.com');</text>
    <text x="20" y="68" class="code-text">const user = await getUser();</text>
    <text x="20" y="84" class="code-text">expect(user.name).toBe('太郎');</text>

    <text x="20" y="110" class="code-text" fill="#666">// When</text>
    <text x="20" y="126" class="code-text">await updateProfile({</text>
    <text x="30" y="142" class="code-text">name: '次郎'</text>
    <text x="20" y="158" class="code-text">});</text>

    <text x="20" y="184" class="code-text" fill="#666">// Then</text>
    <text x="20" y="200" class="code-text">const updated = await getUser();</text>
    <text x="20" y="216" class="code-text">expect(updated.name).toBe('次郎');</text>
    <text x="20" y="232" class="code-text">expect(screen.getByText(</text>
    <text x="30" y="248" class="code-text">'保存しました'</text>
    <text x="20" y="264" class="code-text">)).toBeVisible();</text>

    <text x="10" y="290" class="code-text">});</text>
    <text x="0" y="308" class="code-text">});</text>

    <rect x="-10" y="330" width="320" height="50" rx="3" fill="#FFF8E1"/>
    <text x="150" y="352" style="font-family: 'Noto Sans JP', sans-serif; font-size: 12px; fill: #F39C12; text-anchor: middle; font-weight: bold;">
      AIが自動生成
    </text>
    <text x="150" y="368" style="font-family: 'Noto Sans JP', sans-serif; font-size: 11px; fill: #666; text-anchor: middle;">
      シナリオを貼り付けるだけ
    </text>
  </g>

  <!-- Arrow -->
  <defs>
    <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#666" />
    </marker>
  </defs>
  <path d="M 380 220 L 420 220" stroke="#666" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="400" y="210" class="label" text-anchor="middle">AI変換</text>

  <!-- Arrows for interactions -->
  <path d="M 150 330 L 430 340" stroke="#3498DB" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="280" y="325" class="step-text" fill="#3498DB">ログイン</text>

  <path d="M 150 380 L 430 390" stroke="#3498DB" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="280" y="375" class="step-text" fill="#3498DB">プロフィール更新</text>

  <path d="M 430 440 L 150 450" stroke="#27AE60" stroke-width="2" marker-end="url(#arrow)"/>
  <text x="280" y="435" class="step-text" fill="#27AE60">保存完了通知</text>

  <!-- Bottom note -->
  <text x="400" y="575" style="font-family: 'Noto Sans JP', sans-serif; font-size: 13px; fill: #666; text-anchor: middle;">
    シナリオベース開発：仕様書がそのままテストコードになる
  </text>
</svg>
